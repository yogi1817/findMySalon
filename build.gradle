plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'org.openapi.generator' version '5.0.0-beta2'
    id 'idea'
    id 'eclipse'
}

group = 'com.spj.find.salon'
version = '1.1'
sourceCompatibility = 14

springBoot {
    mainClassName = "com.spj.salon.FindMySalonApplication"
}

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    //compileOnly {
    //	extendsFrom annotationProcessor
    //}
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

ext {
    set('springCloudVersion', "Hoxton.SR4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql:42.2.6'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.google.maps:google-maps-services:0.14.0'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
    implementation 'org.springframework.cloud:spring-cloud-starter-security'
    implementation 'org.springframework.security:spring-security-jwt:1.1.0.RELEASE'
    implementation 'com.twilio.sdk:twilio:7.54.0'
    implementation 'org.projectlombok:lombok:1.18.12'
    implementation 'org.openapitools:openapi-generator-gradle-plugin:5.0.0-beta2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-spring-web:2.9.2'

    implementation 'javax.mail:mail:1.4.7'
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.apis:google-api-services-gmail:v1-rev82-1.23.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'

    implementation 'org.flywaydb:flyway-core:6.5.5'
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'

    annotationProcessor 'org.projectlombok:lombok:1.18.14'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

task buildAuthorizationClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    inputSpec = "$rootDir/apis/register-user.yml".toString()
    generatorName = "java"
    apiPackage = "com.spj.salon.openapi.client.api"
    modelPackage = "com.spj.salon.openapi.client.resources"
    generateModelTests = false
    generateApiTests = false
    groupId = "com.spj.find.salon"
    configOptions = [
            library            : "resttemplate",
            dateLibrary        : "java14-localdatetime",
            java14             : "true",
            toApiName          : "AuthorizationClient"
    ]
    outputDir = "$rootDir/build/generated".toString()
}

openApiGenerate {
    inputSpec = "$rootDir/apis/findMySalon-api.yml".toString()
    generatorName = "spring"
    apiPackage = "com.spj.salon.openapi.endpoint"
    modelPackage = "com.spj.salon.openapi.resources"
    invokerPackage = "com.spj.salon.openapi.handler"
    configOptions = [
            useTags            : "true",
            configPackage      : "com.spj.salon.openapi.config",
            dateLibrary        : "java14-localdatetime",
            java14             : "true",
            delegatePattern    : "true",
            useBeanValidation  : "true",
            useOptional        : "true",
            swaggerDocketConfig: "false"
    ]
    outputDir = "$rootDir/build/generated".toString()
}

compileJava {
    dependsOn buildAuthorizationClient, tasks.openApiGenerate
    options.compilerArgs = [
            '-s', "$rootDir/build/generated"
    ]
}
sourceSets.main.java.srcDirs("$rootDir/build/generated/src/main/java")
idea.module.sourceDirs += file("$rootDir/build/generated/src/main/java")